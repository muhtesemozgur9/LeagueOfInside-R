version: "3.8"

services:
  home-app:
    build:
      context: ./home-app
      dockerfile: Dockerfile
    image: home-app:latest
    container_name: home-app
    restart: unless-stopped
    ports:
      - "3000:80" 
    environment:
      - NODE_ENV=production

  simulation-app:
    build:
      context: ./simulation-app
      dockerfile: Dockerfile
    image: simulation-app:latest
    container_name: simulation-app
    restart: unless-stopped
    ports:
      - "3001:80"
    environment:
      - NODE_ENV=production

  teams-service:
    build:
      context: ./teams-service
      dockerfile: Dockerfile
    image: teams-service:latest
    container_name: teams-service-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./teams-service:/var/www
    ports:
      - "8080:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=1
      - APP_KEY=base64:YOUR_APP_KEY_HERE
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=teams_service
      - DB_USERNAME=teams
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis

  db:
    image: mysql:8.0
    container_name: teams-service-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: teams_service
      MYSQL_USER: teams
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootsecret
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql

  redis:
    image: redis:alpine
    container_name: teams-service-redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - home-app
      - simulation-app
      - teams-service

volumes:
  dbdata:
